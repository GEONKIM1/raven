<?xml version="1.0" ?>
<Simulation verbosity="all">
  <RunInfo>
    <WorkingDir>Representativity</WorkingDir>
    <Sequence>mcRun, PP1</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <TestInfo>
    <name>framework/PostProcessors/Validation/test_validation_gate_representativity</name>
    <author>Mohammad Abdo (@Jimmy-INL)</author>
    <created>2021-04-29</created>
    <classesTested>PostProcessors.Validation</classesTested>
    <description>
        This test assesses the mechanics of the representativity workflow; one of the validation algorithms used in RAVEN.
        This test a linear model as both the mock experiment and the target plant models. The expected representativity factor should be close to one for each measurable F_i and Figure of merit FOM_i. Currently the test utilizes the bias factor metric to compute the representativity factors.
    </description>
    <revisions>
      <revision author="Mohammad Abdo (@Jimmy-INL)" date="2021-04-11">Added Modification for new PP API</revision>
    </revisions>
  </TestInfo>

  <Models>
    <ExternalModel ModuleToLoad="../../../AnalyticModels/linModel.py" name="linModel" subType="">
      <variables>p1,p2,F1, F2, F3</variables>
    </ExternalModel>
    <PostProcessor name="pp1" subType="Representativity">
      <Features>outputDataMC1|F1, outputDataMC1|F2, outputDataMC1|F3</Features>
      <Targets>outputDataMC2|F1, outputDataMC2|F2</Targets><!--, outputDataMC2|F3-->
      <Metric class="Metrics" type="Metric">simIndex</Metric>
      <featureParameters>outputDataMC1|p1,outputDataMC1|p2</featureParameters>
      <targetParameters>outputDataMC2|p1,outputDataMC2|p2</targetParameters>
      <pivotParameter>outputDataMC1|time</pivotParameter>
      <targetPivotParameter>outputDataMC2|time</targetPivotParameter>
    </PostProcessor>
  </Models>

  <Metrics>
    <Metric name="simIndex" subType="RepresentativityFactors"/>
  </Metrics>

  <Distributions>
    <Normal name="dist1">
      <mean>5.5</mean>
      <sigma>0.55</sigma>
    </Normal>
    <Normal name="dist2">
      <mean>8</mean>
      <sigma>0.8</sigma>
    </Normal>
  </Distributions>

  <Samplers>
    <MonteCarlo name="MC_external">
      <samplerInit>
        <limit>10</limit>
      </samplerInit>
      <variable name="p1">
        <distribution>dist1</distribution>
      </variable>
      <variable name="p2">
        <distribution>dist2</distribution>
      </variable>
    </MonteCarlo>
  </Samplers>

  <Steps>
    <MultiRun name="mcRun" re-seeding="20021986">
      <Input class="DataObjects" type="PointSet">inputPlaceHolder2</Input>
      <Model class="Models" type="ExternalModel">linModel</Model>
      <Sampler class="Samplers" type="MonteCarlo">MC_external</Sampler>
      <Output class="DataObjects" type="PointSet">outputDataMC1</Output>
      <Output class="DataObjects" type="PointSet">outputDataMC2</Output>
    </MultiRun>
    <PostProcess name="PP1">
      <Input class="DataObjects" type="PointSet">outputDataMC1</Input>
      <Input class="DataObjects" type="PointSet">outputDataMC2</Input>
      <Model class="Models" type="PostProcessor">pp1</Model>
      <Output class="DataObjects" type="PointSet">pp1_metric</Output>
      <Output class="OutStreams" type="Print">pp1_metric_dump</Output>
    </PostProcess>
  </Steps>

  <DataObjects>
    <PointSet name="inputPlaceHolder2">
      <Input>p1,p2</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="outputDataMC1">
      <Input>p1,p2</Input>
      <Output>F1, F2, F3</Output>
    </PointSet>
    <PointSet name="outputDataMC2">
      <Input>p1,p2</Input>
      <Output>F1, F2, F3</Output><!--ans2-->
    </PointSet>
    <PointSet name="pp1_metric">
      <Input>InputPlaceHolder</Input>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="pp1_metric_dump">
      <type>csv</type>
      <source>pp1_metric</source>
    </Print>
  </OutStreams>

</Simulation>
